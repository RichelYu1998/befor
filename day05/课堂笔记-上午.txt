知识回顾：
1）程序执行流程、方式
	其他语言也共通：
	a. 顺序结构
	b. 判断结构
	c. 循环结构
	开发中，业务逻辑（程序员也强调逻辑能力）

	基础语法。

2）判断结构
	if语句
	switch语句，一般都用else if替代
	
特别对于初学者，没学懂不用担心，反复练习，练的太少了，见的太少了（“少见多怪”）
main
计算机的高手，不代表他非常董本质。他做到实现一个内容，它知道选什么工具！
计算机是一个应用科学，把工具用好，才是开发者的核心！

多练后，其义自见！一定要锻炼自己独立解决问题能力！

4）循环结构
	for语句，用的最多
	while，也用
	do-while（少用）
	while和do的区别：while可能一次都不执行，do最少执行一次

5）案例：冒泡排序
	核心要素：
	把一组无序数字，进行排序，排的结果：由小到大进行排序
	a. 轮数			外层for（int i=0; i< a.length-1; i++）{}
	b. 每轮结束最大值就位置定了	里层for（int j=0; j< a.length-1-i; j++）{}
	c. 元素比较，交换位置	利用一个中间变量存放值 t，a[j]，a[j+1]

互联网架构：redis、nginx、rabbitmq。。。。


今天任务：api  application inferface 应用程序接口（工具类，类包）
java给我们直接提供丰富工具类，我们的重点是学会这项工具类的使用方法。

强调：
老师，推荐几本书？
在你学习java培优课程时，不要去看其他的书籍
很多市面上书，理论，很多知识已经被市场淘汰，已经被新的技术替代。
这项书作者很多不是在一线战斗开发者，看完这种书，浪费很多宝贵时间和精力！swing没人用（几百页）
java培优课程它是实战课程，它现在市场主流技术方向，企业具体技术点结合真实项目实战的产物。就业，进入企业立即上手干活。

我们的课程避免学习过气技术，避免把时间浪费在不重要的内容上。
我们课程中重的地方就是企业看重你的地方，我们课程中轻的地方，就是你可以掌握一般的地方，企业不太在意的地方。

java 91年诞生95改名java，必然很多东西随着时代和技术发展落伍了！
这些过气技术标准，不用学了！学完到企业中根本没人用！

java过时了吗？
架构技术：redis 用c写，目前全球最顶级技术，分布式内存缓存
redis只解决一个点问题，而我们实际项目，要面对各种问题，各种要求。
而java平台可以，java本身很多技术过时了，但是java规定规范没有过气，而且发展非常旺盛！
jdbc 数据库连接标准，不干活，mysql去按规范写了一套程序，oracle按规范写了一套程序
j2ee规范，企业级项目规范：ssm三大框架springmvc、spring、mybatis都是基于j2ee规范。
j2ee规范中定Servlet规范（解析网页）SpringMVC就符合Servlet规范。
Dubbo、SpringBoot、SpringCloud微服务遵守j2ee规范。

总结一句话：学java更多是学习它相关生态链的技术
这样强大生态链是其它语言所没有的。
php网站，只是企业级项目的一部分；c#桌面版；python人工智能

现在市场上最成熟技术：互联网架构（培优），redis
目前市场的热点：大数据、人工智能

解决企业实际问题，
大型项目中最核心要求：
1）分布式集群
2）高并发（京东、淘宝）		百万发，亿发
3）高可用		系统不倒台，秒级启动 docker
	
	业务系统才是核心，下订单
4）海量数据处理（大数据），分析用户
核心问题都不包括AI

推荐大家学习路径：
1）拿下“java培优课程”主攻互联网架构（知识广度）
2）拿下“高手班”，底层+数据结构（手写）+三大框架源码+手写三大框架（难度）（知识深度）	BAT大厂
3）拿下“大数据”（插班，2个月课程）
4）拿下“人工智能”python

如果都能拿下，你比老师月薪还高，未来不可限量！


1、在java中：万物皆对象Object？
	java中所有的类都是Object的子类！！！！

package cn.tedu.hello;


public class HelloWorld {
	
	public static void main(String[] args) {
		//创建对象？
		HelloWorld hw = new HelloWorld();
		System.out.println( hw );	//本质就是调用了toString方法
		
		//cn.tedu.hello.HelloWorld@659e0bfd
//	    public String toString() {
//	        return getClass().getName() + "@" + Integer.toHexString(hashCode());
//	    }
	    
		System.out.println( hw.toString() );
		//我的类没有toString怎么来的这个方法呢？
	}
}

我们创建的类HelloWorld默认继承了Object类，所以Object的toString方法它就可以调用！！！


2、包装类型，它们都是引用类型，都是对象。默认就继承了Object
package cn.tedu.hello;

//八个包装类的父类（超类）是谁？
public class TestWrapClass {
	public static void main(String[] args) {
		Byte b = 10;
		System.out.println(b.getClass().getName()+"的父亲是：" +  b.getClass().getSuperclass());
		System.out.println(b.getClass().getName()+"的爷爷是：" +  b.getClass().getSuperclass().getSuperclass());
		System.out.println(b.getClass().getName()+"的祖宗是：" +  b.getClass().getSuperclass().getSuperclass().getSuperclass());
		
		//Byte它的父类Number类，Number它的父类是Object类
		
		Short s = 0;
		System.out.println( "Short的父类："+s.getClass().getSuperclass());
		
		Integer i = 0;
		System.out.println( "Integer的父类："+i.getClass().getSuperclass() );
		
		Long x = 0L;
		System.out.println( "Long的父类："+x.getClass().getSuperclass() );
		
		Float f = 0.0f;
		System.out.println( "Float的父类："+f.getClass().getSuperclass() );
		
		Double d = 0.0d;
		System.out.println( "Double的父类："+d.getClass().getSuperclass() );
		
		Character c = 'a';
		System.out.println( "Character的父类："+c.getClass().getSuperclass() );
		
		Boolean bn = true;
		System.out.println( "Boolean的父类："+bn.getClass().getSuperclass() );
	}
	

}

java中万物皆对象是面向对象编程思想，也是实际这样构建体系
api:

getClass() 是获得当前对象的类
getSuperclass() 是获得当前对象父类（超类）

学习一个类时，就可以通过api手册进行查询和学习

2、String字符串，它是不属于基本类型？

		String str = "abc";
		System.out.println( str );
		
		String s2 = "123";
		System.out.println( s2 + 456 );	//+如果两边有一个是字符串，它就是连接符
		

package cn.tedu.hello;

public class TestString {
	public static void main(String[] args) {
		Byte b = 0;
		String s1 = "Byte 类型的父类是：" + b.getClass().getSuperclass().getName();	//拼串
		System.out.println(s1);
		
		//下面就使用format格式化形式：
		String s2 = "Byte 类型的父类是：%s";		//%s 字符串类型占位符
		System.out.println( s2.format(s2, b.getClass().getSuperclass().getName()) );
		
		String s3 = "%s 类型的父类是：%s";	//两个占位符
		System.out.println( s3.format(s3, "Byte", b.getClass().getSuperclass().getName()));
	}
}


占位符：就是一个标识而已，运行format按顺序进行替换


		String s1 = "abc";
		String s2 = "123";
		System.out.println( s1 + s2 );
		System.out.println( s1.concat(s2) );		//拼串


		String s1 = "abc";
		String s2 = "123456";
		System.out.println( s1 + s2 );
		System.out.println( s1.concat(s2) );		//拼串
		
		System.out.println("字符串的长度：" + s1.length() );
		System.out.println("字符串的长度：" + s2.length() );


		String str = "  疫情结束，我就要    升职了，生活这么美好   ";
		System.out.println( str.trim() );
		
		//字符串底层就是一个字符char[]数组
		String s1 = "张居正";
		String s2 = "abcdef";
		
		System.out.println( s1.charAt(0) );		//字符串第一字符
		//s2的最后一个字符
		System.out.println( s2.charAt( s2.length()-1 ) );
		
		//遍历整个字符串
		for(int i=0; i< s1.length(); i++) {
			System.out.println(s1.charAt(i) + ",");
		}


		String phone = "13572801415";		//135-7280-1415
		String s1 = phone.substring(0, 3);		//不要算它，根据结果来看
		System.out.println(s1);
		
		String s2 = phone.substring(3, 7);
		System.out.println(s2);
		
		String s3 = phone.substring(7);
		System.out.println(s3);
		
		System.out.println( s1+"-"+s2+"-"+s3);


		
		//charAt获取字符，字符值 ascii码
		
		char c1 = 'a';		//字符，值，基础类型变量，不是内存地址
		System.out.println(c1);
		
		char c2 = 97;		//a字符的ascii码是97？
		//ascii，键盘敲入字符，计算机识别一种方式：键盘a，计算机底层只有0和1
		//它没有字符概念的，找个翻译，规定a=97，有个这个规定，就把a变成整数97
		//整数97变成二进制0和1，计算机可以处理二进制，计算机知道你敲入a
		//规定：ascii码（键盘和计算机交互标准）
		System.out.println(c2);




package cn.tedu.hello;

public class TestString {
	public static void main(String[] args) {
		String s="125030";
		
		System.out.println(s.charAt(0)+s.charAt(1));	//ascii 49+50=99  没有实际意义
		
		//之前写法两个数字相加，下面字符串连接符
		System.out.println(s.charAt(0)+""+s.charAt(1)); 

	}
}















